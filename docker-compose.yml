version: '3'
services:
  zipkin:
    image:  openzipkin/zipkin
    ports:
      - "9411:9411"
    environment:
      DB_UPSTREAM: http://${DOCKER_GATEWAY_HOST:-host.docker.internal}:9411
    networks:
      - my_network
    restart: always
  eureka:
    depends_on:
      - zipkin
    image: p9-eureka
    ports:
      - "9102:9102"
      - "8761:8761"
    environment:
      DB_UPSTREAM: http://${DOCKER_GATEWAY_HOST:-host.docker.internal}:9102
      DB_UPSTREAM: http://${DOCKER_GATEWAY_HOST:-host.docker.internal}:8761
    networks:
      - my_network
    restart: always
  config:
    depends_on:
      - zipkin
      - eureka
    image: p9-config
    ports:
      - "9101:9101"
      - "9191:9191"
    healthcheck:
      test: "exit 0"
    environment:
      DB_UPSTREAM: http://${DOCKER_GATEWAY_HOST:-host.docker.internal}:9101
      DB_UPSTREAM: http://${DOCKER_GATEWAY_HOST:-host.docker.internal}:9191
    networks:
      - my_network
    restart: always
  springadmin:
    depends_on:
      config:
        condition: service_healthy
      zipkin:
        condition: service_started
      eureka:
        condition: service_started
    image:  p9-spring-admin
    ports:
      - "9105:9105"
    networks:
      - my_network
    restart: on-failure
  zuul:
    depends_on:
      config:
        condition: service_healthy
      zipkin:
        condition: service_started
      eureka:
        condition: service_started
    image:  p9-zuul
    ports:
      - "9004:9004"
    networks:
      - my_network
    restart: on-failure
  mysql:
    depends_on:
      config:
        condition: service_healthy
      zipkin:
        condition: service_started
      eureka:
        condition: service_started
    image:  mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: 'mediscreen_prod'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'mediscreen'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'ocr-p9$$+'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'rootroot'
    healthcheck:
      test: "exit 0"
    networks:
      - my_network
    restart: on-failure
  mongodb:
    image: mongo
    volumes:
      - "./mongo/data:/data/db"
    ports:
      - "27017:27017"
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: 'root'
      MONGO_INITDB_ROOT_PASSWORD: 'rootroot'
    healthcheck:
      test: "exit 0"
    restart: on-failure
    networks:
      - my_network
  user:
    depends_on:
      config:
        condition: service_healthy
      zipkin:
        condition: service_started
      eureka:
        condition: service_started
      springadmin:
        condition: service_started
      zuul:
        condition: service_started
      mysql:
        condition: service_healthy
    image:  p9-user
    ports:
      - "8083:8083"
      - "8093:8093"
    environment:
    - JASYPT_ENCRYPTOR_PASSWORD=openclassroom
    networks:
      - my_network
    restart: on-failure
  patient:
    depends_on:
      config:
        condition: service_healthy
      zipkin:
        condition: service_started
      eureka:
        condition: service_started
      springadmin:
        condition: service_started
      zuul:
        condition: service_started
      mysql:
        condition: service_healthy
    image:  p9-patient
    ports:
      - "8084:8084"
      - "8094:8094"
    environment:
       - JASYPT_ENCRYPTOR_PASSWORD=${JASYPT_ENCRYPTOR_PASSWORD}  
    networks:
      - my_network
    restart: on-failure
  notes:
    depends_on:
      config:
        condition: service_healthy
      zipkin:
        condition: service_started
      eureka:
        condition: service_started
      springadmin:
        condition: service_started
      zuul:
        condition: service_started
      mongodb:
        condition: service_healthy      
    image:  p9-notes
    ports:
      - "8085:8085"
      - "8095:8095"
    environment:
      - JASYPT_ENCRYPTOR_PASSWORD=${JASYPT_ENCRYPTOR_PASSWORD}  
    networks:
      - my_network
    restart: on-failure
  assess:
    depends_on:
      config:
        condition: service_healthy
      zipkin:
        condition: service_started
      eureka:
        condition: service_started
      springadmin:
        condition: service_started
      zuul:
        condition: service_started
      mongodb:
        condition: service_healthy  
    image:  p9-assess
    ports:
      - "8086:8086"
      - "8096:8096"
    networks:
      - my_network
    restart: on-failure
  nginx:
    container_name: exteam-app
    image: exteam
    build: '.'
    ports:
      - "4200:4200"
    networks:
      - my_network
networks:
  my_network:
